@import url('https://fonts.googleapis.com/css?family=Dancing+Script');
@import url('https://fonts.googleapis.com/css?family=Abel');
@import url('./Messageboard.css');
@import url('./AdminPage.css');
@import url('./Header.css');
@import url('./React-big-calendar.css');
@import url('./Home.css');
@import url('./Forms.css');
@import url('./Places.css');
@import url('./Modal.css');
@import url('./SplashLoginSignUp.css');
@import url('./Sidebar.css');

/*goal for centering: create one single div set the width of the elements and the margin around them to auto*/

/*if we want anything centered:*/
/*body {
    display: flex;
    justify-content: center;
    align-items: center;
}*/

.wrapper {
  font-size: 100%;
  position: absolute;
  height: 100%;
  width: 100%;
  overflow: scroll;
}

.FontAmatic {
  font-family: 'Amatic SC';
  font-size: 40px;
  text-align: center;
  color: black;
  margin-top: 30px;
}

.center {
  text-align: center;
}

h3 {
  font-family: 'Dancing Script';
  text-align: center;
  font-size: 52px;
  font-style: italic;
  font-weight: bold;
  margin-top: -8px;
}

.black {
  color: black;
}

button:hover {
  background-color: #def9a3;
}

//grid begins here

//grid-container: The purpose of the container is to set the width of the entire grid. The width of the container is generally 100%, but you might want to set a max-width for larger displays.
.grid-container {
    width : 100%;
    max-width : 1200px;
    box-sizing: border-box;
}
//row: The purpose of the row element is to keep the columns inside it from overflowing onto other rows. To achieve this, we'll use the clearfix hack to make sure everything inside the row stays inside the row.
.row:before,
.row:after {
    content:"";
    display: table ;
    clear: both;
}
//column positioning: If our columns are empty, our floated columns will stack on top of each other. To prevent this, we'll give our columns a min-height of 1px as well as float them. To find the width of one column, all we have to do is divide the total number of columns by the width of the container. In our case, the width of the container is 100%, and we want 6 columns, so 100/6 = 16.66, so our base column width is 16.66%.If we want a section that's 2 columns wide, we have to create an 2-column-wide column. The calculations are pretty simple. The only thing we have consider when using these column combinations is that the total number of columns in a row adds up to 6 (or whatever the total number of columns is).
[class*='col-'] {
    float: left;
    min-height: 1px;
    width: 16.66%;
    /*-- our gutter --*/
    padding: 12px;
    background-color: #FFDCDC;
}

.outline, .outline *{
    outline: 1px solid #F6A1A1;
}
