# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:8.2.0
        environment:
            PGHOST: 127.0.0.1
        - image: circleci/postgres:9.5-alpine
          environment:
            POSTGRES_DB: bc_development
      - image: circleci/postgres:9.6.3

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - run:
          name: "Checking Versions"
          command: |
            node --version
            npm --version

      - checkout


      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - restore_cache:
          keys:
          - v1-client-dependencies-{{ checksum "./client/package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-client-dependencies-

      - run: yarn install

      - restore_cache:
          keys:
          - v1-client-dependencies-{{ checksum "./client/package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-client-dependencies-

      - run: cd client && yarn install && cd ..

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - save_cache:
          paths:
            - client/node_modules
          key: v1-client-dependencies-{{ checksum "./client/package.json" }}

      # update database
      - run: cp ./server/config/config.example.json ./server/config/config.example.json
      - run: cd ./server && sequelize db:migrate
      - run: cd ./server && sequelize db:seed:all

      # run tests!
      - run: yarn test

      # Deploy production
